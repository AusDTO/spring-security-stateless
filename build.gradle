apply plugin: 'java'
apply plugin: 'maven-publish'

def javaVersion = '1.8'
sourceCompatibility = javaVersion
targetCompatibility = javaVersion

group = 'com.github.AusDTO'
version = 'git rev-parse --short=10 HEAD'.execute().getText().trim()
def tag = System.env.CIRCLE_TAG
if (tag) {
    version = tag
}

sourceSets {
    sampleapp {
        java {
            compileClasspath += main.output
            runtimeClasspath += main.output
        }
    }
}

configurations {
    sampleappCompile.extendsFrom compile
    sampleappRuntime.extendsFrom runtime

    all*.exclude group: 'org.apache.tomcat.embed'      // Use Jetty instead
    all*.exclude module: 'spring-boot-starter-tomcat'  // Use Jetty instead
}

task run(type: JavaExec,
        description: 'Runs the sample application.',
        group: 'Application') {
    classpath = sourceSets.sampleapp.runtimeClasspath
    main = 'au.gov.dto.springframework.security.sample.Application'
}

jar {
    manifest {
        attributes 'Specification-Title': project.name,
                'Specification-Version': "${System.env.CIRCLE_TAG}",
                'Specification-Vendor': "${System.env.CIRCLE_PROJECT_USERNAME}",
                'Implementation-Title': "${System.env.CIRCLE_PROJECT_REPONAME}",
                'Implementation-Version': "${System.env.CIRCLE_SHA1}",
                'Implementation-Vendor-Id': "com.github.${System.env.CIRCLE_PROJECT_USERNAME}",
                'Implementation-Vendor': "${System.env.CIRCLE_PROJECT_USERNAME}",
                'Implementation-URL': "${System.env.CIRCLE_REPOSITORY_URL}",
                'Built-By': "${System.env.CIRCLE_USERNAME}",
                'Build-URL': "${System.env.CIRCLE_BUILD_URL}",
                'Build-Jdk': "${System.properties['java.version']}"
    }
}

task sourcesJar(type: Jar,
        dependsOn: classes,
        description: 'Assembles a jar archive containing the Java source files.',
        group: 'Build') {
    from sourceSets.main.allJava
}

task javadocJar(type: Jar,
        dependsOn: javadoc,
        description: 'Assembles a jar archive containing the javadoc files.',
        group: 'Build') {
    classifier = 'javadoc'
    from javadoc.destinationDir
}

artifacts {
    archives sourcesJar
    archives javadocJar
}

publishing {
    publications {
        mavenJava(MavenPublication) {
            from components.java
            artifact sourcesJar {
                classifier 'sources'
            }
            artifact javadocJar {
                classifier 'javadoc'
            }
        }
    }
}

repositories {
    mavenCentral()
}

dependencies {
    compile 'org.springframework.security:spring-security-web:3.2.0.RELEASE',
            'com.fasterxml.jackson.core:jackson-databind:2.1.0',
            'javax.servlet:javax.servlet-api:3.0.1',
            'com.nimbusds:nimbus-jose-jwt:4.19'

    sampleappCompile 'org.springframework.boot:spring-boot-starter-security:1.3.5.RELEASE',
            'org.springframework.boot:spring-boot-starter-web:1.3.5.RELEASE',
            'org.springframework.boot:spring-boot-starter-jetty:1.3.5.RELEASE'

    testCompile 'junit:junit:4.12',
            'org.hamcrest:hamcrest-library:1.3',
            'org.springframework:spring-test:3.2.0.RELEASE',
            'org.skyscreamer:jsonassert:1.3.0',
            'org.mockito:mockito-core:2.0.70-beta',
            'org.assertj:assertj-core:3.4.1',
            'com.fasterxml.jackson.core:jackson-databind:2.5.0'
}

task wrapper(type: Wrapper,
        description: 'Create Gradle wrapper scripts.',
        group: 'Build Setup') {
    gradleVersion = '2.14'
}

